apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {

    buildToolsVersion = '29.0.2'
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.hamid.tab"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

android.sourceSets{
    test {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
    androidTest {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    /* Android Support Library: RecyclerView, CardView  */
    implementation "androidx.appcompat:appcompat:$accompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.cardview:cardview:$androidxVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"
    implementation group: 'commons-io', name: 'commons-io', version: "$commonsVersion"

    /* Architecture Lifecycle components */
    implementation "androidx.lifecycle:lifecycle-extensions:$archCompomentVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedataKtx"
    testImplementation "androidx.arch.core:core-testing:$archCompomentVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$archCompomentVersion"

    /* RxJava */
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    // RxAndroid */
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    /* ROOM */
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    /* Dagger2 */
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.okhttp:okhttp:$okhttpVersion"

    /* Unit test */
    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxTest"
    androidTestImplementation "androidx.test:core:$androidxTest"
    androidTestImplementation "androidx.test:rules:$androidxTestRules"
    androidTestImplementation "androidx.test:runner:$androidxTestRules"

    /* For recycler view actions */
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    implementation "com.squareup.picasso:picasso:$picassoVersion"

    androidTestImplementation "android.arch.core:core-testing:1.1.1"


}