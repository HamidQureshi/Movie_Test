apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {

    buildToolsVersion = '29.0.2'
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.hamid.movies"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner rootProject.testInstrumentationRunner
        multiDexEnabled true

    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

android.sourceSets{
    test {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
    androidTest {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
}

dependencies {
    implementation project(path: ':domain')
    api project(path: ':data')

    /* Kotlin */
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation libsCommon.kotlin

    /* Android Support Library: RecyclerView, CardView  */
    implementation libsPresentation.appCompat
    implementation libsPresentation.material
    implementation libsPresentation.cardview
    implementation libsPresentation.recyclerview
    implementation libsPresentation.constraintLayout
    implementation libsPresentation.multidex
    implementation libsPresentation.annotation
    implementation group: 'commons-io', name: 'commons-io', version: "$commonsVersion"

    /* Architecture Lifecycle components */
    implementation libsPresentation.lifecycleExtensions
    testImplementation libsPresentation.coreTesting
    annotationProcessor libsPresentation.lifecycleCompiler
    implementation libsPresentation.livedata

    // RxJava and RxAndroid
    implementation libsCommon.rxJava
    implementation libsCommon.rxAndroid

    /* ROOM */
    implementation libsCommon.room
    implementation libsCommon.roomRxJava
    kapt libsCommon.roomCompiler
    androidTestImplementation libsCommon.roomTesting

    /* Dagger2 */
    annotationProcessor libsCommon.daggerCompiler
    implementation libsCommon.daggerAndroid
    implementation libsCommon.daggerAndroidSupport
    annotationProcessor libsCommon.daggerAndroidProcessor
    implementation libsCommon.dagger
    kapt libsCommon.daggerKotlinAndroidProcessor
    kapt libsCommon.daggerKotlinCompiler

//    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
//    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
//    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
//    implementation "com.google.code.gson:gson:$gsonVersion"
      implementation libsCommon.okhttpLogging
//    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3Version"
//    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
//    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
//    implementation "com.squareup.okhttp:okhttp:$okhttpVersion"

    /* Unit test */
//    testImplementation "junit:junit:$junitVersion"
//    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation libsCommon.mockitoInline
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    implementation libsCommon.espressoIdlingResource
    androidTestImplementation libsCommon.extJunit
    androidTestImplementation libsCommon.core
    androidTestImplementation libsCommon.rules
    androidTestImplementation libsCommon.runner

    // JUnit
    testImplementation libsCommon.junit

    // Mockito Kotlin
    testImplementation libsCommon.mockitoKotlin

    /* For recycler view actions */
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    implementation libsPresentation.picasso

    androidTestImplementation libsPresentation.coreTesting


}
repositories {
    mavenCentral()
}